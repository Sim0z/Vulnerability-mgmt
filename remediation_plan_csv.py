import openai
import pandas as pd
from tkinter import *
from tkinter.filedialog import askopenfilename
import time

openai.api_key = input("Enter your OpenAI API key: ")
last_request_time = time.time()

def generate_response(prompt):
    global last_request_time
    time_since_last_request = time.time() - last_request_time
    if time_since_last_request < 60:
        time.sleep(60 - time_since_last_request)
    last_request_time = time.time()
    model_engine = "text-davinci-002"
    prompt = (f"Vulnerability: {prompt}\n"
              f"Remediation plan:")
    response = openai.Completion.create(
        engine=model_engine,
        prompt=prompt,
        max_tokens=1000,
        n=1,
        stop=None,
        temperature=0.5,
    )
    return response.choices[0].text.strip()

def browse_file():
    global file_path
    file_path = askopenfilename()
    if file_path.endswith('.xlsx'):
        generate_button['state'] = NORMAL
        file_label.config(text=file_path)
    else:
        generate_button['state'] = DISABLED
        file_label.config(text="Invalid file format")

def generate_remediation_plan():
    df = pd.read_excel(file_path)
    df['Remediation Plan'] = df['Vulnerability Description'].apply(generate_response)
    df = df[['ID', 'Status', 'Title', 'Severity', 'CVSS Base Score', 'CVSS Score', 'CWE', 'Vulnerability Description', 'Location', 'Impact', 'Remediation Plan', 'References', 'Appendix', 'Appendix Description']]
    df.to_csv('Remediation_Plans.csv', index=False)
    status_label.config(text="Remediation plans generated successfully")

root = Tk()
root.title("Remediation Plan Generator")
root.geometry("500x200")

browse_button = Button(root, text="Browse", command=browse_file)
browse_button.pack(pady=10)

file_label = Label(root, text="")
file_label.pack()

generate_button = Button(root, text="Generate Remediation Plans", command=generate_remediation_plan, state=DISABLED)
generate_button.pack(pady=10)

status_label = Label(root, text="")
status_label.pack()

root.mainloop()
